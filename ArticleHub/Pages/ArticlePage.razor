@page "/"
@using ArticleHub.Models
@using ArticleHub.Services
@inject NavigationManager NavigationManager
@inject ArticleService ArticleService

<h3 class="header">Articles</h3>

@if (IsLoading)
{
    <p class="loading">Loading articles...</p>
}
else if (ErrorMessage != null)
{
    <div class="error-message">@ErrorMessage</div>
}
else if (articles == null || articles.Count == 0)
{
    <p class="no-articles">No articles found.</p>
}
else
{
    <div class="articles-grid">
        @foreach (var article in articles.OrderBy(t => t.Id))
        {
            <div class="article-card">
                <h4 class="article-title">@article.Title</h4>
                <p class="article-summary">@article.Summary</p>
                <button class="read-more" @onclick="(() => SelectArticle(article.Id))">Click here to know more!</button>
            </div>
        }
    </div>
}

@code {

    private List<Articles>? articles;
    private bool IsLoading = true;
    private string? ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsLoading = true;
            articles = await ArticleService.GetArticlesAsync();
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred while fetching articles. Please try again later.";
            Console.Error.WriteLine($"Error fetching articles: {ex.Message}");
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void SelectArticle(int id)
    {
        NavigationManager.NavigateTo($"/article/{id}");
    }
}
