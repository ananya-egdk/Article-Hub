@page "/article/{id:int}"
@using ArticleHub.Models
@using ArticleHub.Services
@inject ArticleService ArticleService

<h3 class="header">Article Details</h3>

@if (IsLoading)
{
    <p class="loading">Loading...</p>
}
else if (ErrorMessage != null)
{
    <div class="error-message">@ErrorMessage</div>
}
else if (Article == null)
{
    <p class="not-found">Article not found.</p>
}
else
{
    <div class="article-details">
        <h4 class="article-title">@Article.Title</h4>
        <p class="article-summary">@Article.Summary</p>
        <div class="article-full-text">@Article.FullText</div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Articles? Article;
    private bool IsLoading = true;
    private string? ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsLoading = true;
            Article = await ArticleService.GetArticleByIdAsync(Id);

            if (Article == null)
            {
                ErrorMessage = "The requested article does not exist.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred while fetching the article. Please try again later.";
            Console.Error.WriteLine($"Error fetching article: {ex.Message}");
        }
        finally
        {
            IsLoading = false;
        }
    }
}
